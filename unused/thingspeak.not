from include.secrets import THINGSPEAK_WRITE_KEY, THINGSPEAK_CHANNEL_ID

import ussl as ssl

try:
    import usocket as socket
except:
    import socket


THINGSPEAK_HOST = 'api.thingspeak.com'
THINGSPEAK_PORT = 443

# a template of HTTP request to ThingSpeak to post temperature and humidity
THINGSPEAK_POST_TEMPLATE_NOT = '''
POST /update HTTP/1.1
Host: %s
Connection: close
X-THINGSPEAKAPIKEY: %s
Content-Type: application/x-www-form-urlencoded
Content-Length: %d
%s
'''

THINGSPEAK_POST_TEMPLATE = '''
GET /update?api_key=%s&
Host: %s
Connection: close
X-THINGSPEAKAPIKEY: %s
Content-Type: application/x-www-form-urlencoded
Content-Length: %d
%s
'''

THINGSPEAK_STATUS = ''

def http_get(url):
    _, _, host, path = url.split('/', 3)
    addr = socket.getaddrinfo(THINGSPEAK_HOST, THINGSPEAK_PORT)[0][-1]
    s = socket.socket()
    s.connect(addr)
    s.send(bytes('GET /%s HTTP/1.0\r\nHost: %s\r\n\r\n' % (path, host), 'utf8'))
    while True:
        data = s.recv(100)
        if data:
            print(str(data, 'utf8'), end='')
        else:
            break
    s.close()


def main(data):
    print("Thingspeak.main()...")

    global THINGSPEAK_WRITE_KEY
    if not THINGSPEAK_WRITE_KEY:
        print('no ThingSpeak key specified, skip sending data')
        return

    print('send data to ThingSpeak')
    s = socket.socket()
    ai = socket.getaddrinfo(THINGSPEAK_HOST, THINGSPEAK_PORT)
    addr = ai[0][-1]
    s.connect(addr)
    s = ssl.wrap_socket(s)
    #data = 'field1=%.2f&field2=%.2f' % (t, h)
    http_data = THINGSPEAK_POST_TEMPLATE % (
                                            THINGSPEAK_WRITE_KEY,
                                            THINGSPEAK_HOST,
                                            THINGSPEAK_WRITE_KEY,
                                            len(data),
                                            data
                                            )
    s.write(http_data.encode())
    s.close()


print("Thingspeak imported...")
